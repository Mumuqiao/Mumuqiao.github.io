<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Probability Statistics</title>
      <link href="2021/05/30/Probability-Statistics/"/>
      <url>2021/05/30/Probability-Statistics/</url>
      
        <content type="html"><![CDATA[<h1 id="泊松分布"><a href="#泊松分布" class="headerlink" title="泊松分布"></a>泊松分布</h1><script type="math/tex; mode=display">X\sim B(n,p)</script><h1 id="等待型分布"><a href="#等待型分布" class="headerlink" title="等待型分布"></a>等待型分布</h1><p>即第一次中即停止，投篮投到第一个中就停止</p><h2 id="几何分布（离散型）"><a href="#几何分布（离散型）" class="headerlink" title="几何分布（离散型）"></a>几何分布（离散型）</h2><script type="math/tex; mode=display">X \sim G(p)</script><h2 id="指数分布（连续型）"><a href="#指数分布（连续型）" class="headerlink" title="指数分布（连续型）"></a>指数分布（连续型）</h2><script type="math/tex; mode=display">E(\lambda), {\lambda} > 0</script><script type="math/tex; mode=display">f(x) = \begin{cases} \lambda e^{- \lambda x} , &x>0 \\ 0,&else  \end{cases}</script><script type="math/tex; mode=display">F(x)=\begin{cases} 1- e^{- \lambda x}, & x \geq 0 \\ 0 , &x<0 \end{cases}</script><h3 id="期望"><a href="#期望" class="headerlink" title="期望"></a>期望</h3><script type="math/tex; mode=display">E(X) = \frac{1}{\lambda}</script><p>$\lambda$代表失效率，即期望代表着平均等待时间。即失效率高，机器容易坏，等待坏的时间短。故$\lambda &gt; 0$</p><h3 id="tips"><a href="#tips" class="headerlink" title="tips"></a>tips</h3><ul><li>当事件服从$X \sim E(\lambda)$时，等待了$t$小时的情况下，在等待$a$小时后事件发生的概率等于直接等待$a$小时的概率。</li></ul><h1 id="泊松分布-1"><a href="#泊松分布-1" class="headerlink" title="泊松分布"></a>泊松分布</h1><script type="math/tex; mode=display">X\sim P(\lambda)</script><script type="math/tex; mode=display">P\{X=k\} = \frac{ \lambda ^{k}} {k!} e^{- \lambda }</script><h2 id="期望-1"><a href="#期望-1" class="headerlink" title="期望"></a>期望</h2><p>$E(X) = \lambda$</p><h2 id="tips-1"><a href="#tips-1" class="headerlink" title="tips"></a>tips</h2><ul><li>泊松分布代表着某场合某单位时间内源源不断的质点来流的个数$(k)$。故$k &gt;0$</li><li>$\lambda$代表强度，即平均值。故$\lambda &gt; 0$</li><li>有时候可表示稀有事件发生的概率，即问在一盘青椒炒肉丝中存在100根肉丝的概率。</li></ul><h1 id="正态分布"><a href="#正态分布" class="headerlink" title="正态分布"></a>正态分布</h1><script type="math/tex; mode=display">X\sim N({\mu},{\sigma}^2)</script><script type="math/tex; mode=display">f(x) = \frac{1}{\sqrt{2 \pi } \sigma }e^{-\frac{1}{2}(\frac{x- \mu }{ \sigma })^2},(-\infty<x<+\infty)</script><h2 id="标准正太分布"><a href="#标准正太分布" class="headerlink" title="标准正太分布"></a>标准正太分布</h2><script type="math/tex; mode=display">\varphi (x) = \frac{1}{\sqrt{2 \pi } \sigma }e^{- {\frac{x^{2}} {2}} }</script><p>分布函数$\Phi(X)$</p><p><strong>只有标准正太函数用</strong>$\varphi$<strong>和</strong>$\Phi$</p><h2 id="tips-2"><a href="#tips-2" class="headerlink" title="tips"></a>tips</h2><ul><li>在$x={\mu}-{\sigma}$ 和$x = \mu + \sigma$处是函数凸到凹和凹到凸函数的分界点。</li><li>$\Phi(0) = \frac{1}{2}$  ，$\Phi(-X) = 1- \Phi(X)$</li><li>$F(x) = P{X \leq x} = \Phi(\frac{x-\mu}{\sigma})$</li><li>$aX+b \sim N(a\mu +b, a^2\sigma^2),(a\neq 0)$</li></ul>]]></content>
      
      
      <categories>
          
          <category> Math </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 概率统计 </tag>
            
            <tag> 数学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>周志华《ML》第三章课后题</title>
      <link href="2021/03/30/MLzChapter3/"/>
      <url>2021/03/30/MLzChapter3/</url>
      
        <content type="html"><![CDATA[<p>代码和数据集已上传至<a href="https://github.com/Mumuqiao/Machine-Leaning-Zhou">github仓库</a></p><hr><h1 id="3-3-编程实现对率回归，并给出西瓜数据集3-0-alpha-上的结果"><a href="#3-3-编程实现对率回归，并给出西瓜数据集3-0-alpha-上的结果" class="headerlink" title="3.3 编程实现对率回归，并给出西瓜数据集3.0$\alpha$上的结果"></a>3.3 编程实现对率回归，并给出西瓜数据集3.0$\alpha$上的结果</h1><p><a href="https://github.com/Mumuqiao/Machine-Leaning-Zhou/blob/main/Chapter3/watermelon_3a.csv">西瓜数据集3.0$\alpha$下载</a></p><p>采用的方法是直接用sklearn中的对率回归模型进行训练。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> model_selection</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> metrics</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">dataset = np.loadtxt(<span class="string">&#x27;watermelon_3a.csv&#x27;</span>, delimiter=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"></span><br><span class="line">X = dataset[:, <span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">Y = dataset[:, <span class="number">3</span>]</span><br><span class="line"><span class="comment"># print(Y,Y.shape)</span></span><br><span class="line"><span class="comment"># f1 = plt.figure(1)</span></span><br><span class="line"><span class="comment"># plt.title(&#x27;watermelon_3a&#x27;)</span></span><br><span class="line"><span class="comment"># plt.xlabel(&#x27;density&#x27;)</span></span><br><span class="line"><span class="comment"># plt.ylabel(&#x27;ratio_sugar&#x27;)</span></span><br><span class="line"><span class="comment"># plt.scatter(X[Y == 0,0], X[Y == 0,1],marker=&#x27;o&#x27;, color =&#x27;b&#x27;, s=100,label=&#x27;bad&#x27;)</span></span><br><span class="line"><span class="comment"># plt.scatter(X[Y==1,0],X[Y==1,1],marker=&#x27;o&#x27;,color=&#x27;g&#x27;,s=100,label=&#x27;good&#x27;)</span></span><br><span class="line"><span class="comment"># plt.legend(loc=&#x27;upper right&#x27;)</span></span><br><span class="line"><span class="comment"># plt.show()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># generalization of train and test dataset</span></span><br><span class="line">Xtrain, Xtest, Ytrain, Ytest = model_selection.train_test_split(X,Y,test_size=<span class="number">0.5</span>,random_state=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#model training</span></span><br><span class="line">log_model = LogisticRegression()</span><br><span class="line">log_model.fit(Xtrain,Ytrain)</span><br><span class="line"></span><br><span class="line">y_pred = log_model.predict(Xtest)</span><br><span class="line"></span><br><span class="line">print(metrics.confusion_matrix(Ytest,y_pred))</span><br><span class="line">print(metrics.classification_report(Ytest,y_pred))</span><br></pre></td></tr></table></figure><h1 id="3-4-选择两个UCI数据集，比较10折交叉验证法和留一法所估计出对率回归的错误率"><a href="#3-4-选择两个UCI数据集，比较10折交叉验证法和留一法所估计出对率回归的错误率" class="headerlink" title="3.4 选择两个UCI数据集，比较10折交叉验证法和留一法所估计出对率回归的错误率"></a>3.4 选择两个UCI数据集，比较10折交叉验证法和留一法所估计出对率回归的错误率</h1><p>我只使用了一个UCI数据集<a href="https://github.com/Mumuqiao/Machine-Leaning-Zhou/blob/main/Chapter3/iris.csv">iris</a></p><p>关于数据集中的各项含义还请手动google。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">from</span> sklearn.linear_model <span class="keyword">import</span> LogisticRegression</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> metrics</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> cross_val_predict</span><br><span class="line"><span class="keyword">from</span> sklearn.model_selection <span class="keyword">import</span> LeaveOneOut</span><br><span class="line"></span><br><span class="line">data_set = np.loadtxt(<span class="string">&#x27;iris.csv&#x27;</span>,delimiter=<span class="string">&#x27;,&#x27;</span>, skiprows=<span class="number">1</span>, usecols=(<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>))</span><br><span class="line">X = data_set[:, <span class="number">0</span>:<span class="number">4</span>]</span><br><span class="line">Y = np.loadtxt(<span class="string">&#x27;iris.csv&#x27;</span>,dtype=str,delimiter=<span class="string">&#x27;,&#x27;</span>, skiprows=<span class="number">1</span>, usecols=(<span class="number">4</span>))</span><br><span class="line"><span class="comment">#print(Y)</span></span><br><span class="line">f1 = plt.figure(<span class="number">1</span>)</span><br><span class="line">plt.xlabel(<span class="string">&#x27;sepal length&#x27;</span>)</span><br><span class="line">plt.ylabel(<span class="string">&#x27;sepal width&#x27;</span>)</span><br><span class="line">plt.scatter(X[Y==<span class="string">&#x27;Iris-setosa&#x27;</span>,<span class="number">0</span>],X[Y==<span class="string">&#x27;Iris-setosa&#x27;</span>,<span class="number">1</span>],color=<span class="string">&#x27;b&#x27;</span>,marker=<span class="string">&#x27;o&#x27;</span>,</span><br><span class="line">            s=<span class="number">100</span>,label=<span class="string">&#x27;setosa&#x27;</span>)</span><br><span class="line">plt.scatter(X[Y==<span class="string">&#x27;Iris-versicolor&#x27;</span>,<span class="number">0</span>],X[Y==<span class="string">&#x27;Iris-versicolor&#x27;</span>,<span class="number">1</span>],color=<span class="string">&#x27;g&#x27;</span>,marker=<span class="string">&#x27;o&#x27;</span>,</span><br><span class="line">            s=<span class="number">100</span>,label=<span class="string">&#x27;versicolor&#x27;</span>)</span><br><span class="line">plt.scatter(X[Y==<span class="string">&#x27;Iris-virginica&#x27;</span>,<span class="number">0</span>],X[Y==<span class="string">&#x27;Iris-virginica&#x27;</span>,<span class="number">1</span>],color=<span class="string">&#x27;r&#x27;</span>,marker=<span class="string">&#x27;o&#x27;</span>,</span><br><span class="line">            s=<span class="number">100</span>,label=<span class="string">&#x27;virginica&#x27;</span>)</span><br><span class="line">plt.legend(loc=<span class="string">&#x27;upper right&#x27;</span>)</span><br><span class="line">plt.show()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">log_model = LogisticRegression()</span><br><span class="line">y_pred = cross_val_predict(log_model,X,Y,cv=<span class="number">10</span>)</span><br><span class="line">print(metrics.accuracy_score(Y,y_pred))</span><br><span class="line"></span><br><span class="line">loo = LeaveOneOut()</span><br><span class="line">accuracy = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> train,test <span class="keyword">in</span> loo.split(X):</span><br><span class="line">    log_model.fit(X[train],Y[train])</span><br><span class="line">    y_pred = log_model.predict(X[test])</span><br><span class="line">    <span class="keyword">if</span> y_pred == Y[test] :</span><br><span class="line">        accuracy+=<span class="number">1</span></span><br><span class="line">print(accuracy/X.shape[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><h1 id="3-5-实现线性判别分析，并给出西瓜数据集3-0-alpha-上的结果"><a href="#3-5-实现线性判别分析，并给出西瓜数据集3-0-alpha-上的结果" class="headerlink" title="3.5 实现线性判别分析，并给出西瓜数据集3.0$\alpha$上的结果"></a>3.5 实现线性判别分析，并给出西瓜数据集3.0$\alpha$上的结果</h1><p>采用sklearn库实现</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> model_selection</span><br><span class="line"><span class="keyword">from</span> sklearn.discriminant_analysis <span class="keyword">import</span> LinearDiscriminantAnalysis</span><br><span class="line"><span class="keyword">from</span> sklearn <span class="keyword">import</span> metrics</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"></span><br><span class="line">dataset = np.loadtxt(<span class="string">&#x27;watermelon_3a.csv&#x27;</span>, delimiter=<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line"></span><br><span class="line">X = dataset[:, <span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line">Y = dataset[:, <span class="number">3</span>]</span><br><span class="line">X_train, X_test, y_train, y_test = model_selection.train_test_split(X, y, test_size=<span class="number">0.5</span>, random_state=<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># model fitting</span></span><br><span class="line">lda_model = LinearDiscriminantAnalysis(solver=<span class="string">&#x27;lsqr&#x27;</span>, shrinkage=<span class="literal">None</span>).fit(X, y)</span><br><span class="line"></span><br><span class="line"><span class="comment"># model validation</span></span><br><span class="line">y_pred = lda_model.predict(X_test)</span><br><span class="line"></span><br><span class="line"><span class="comment"># summarize the fit of the model</span></span><br><span class="line">print(metrics.confusion_matrix(y_test, y_pred))</span><br><span class="line">print(metrics.classification_report(y_test, y_pred))</span><br></pre></td></tr></table></figure><h1 id="References"><a href="#References" class="headerlink" title="References"></a>References</h1><p><a href="https://pnyuan.github.io/blog/categories/%E5%91%A8%E5%BF%97%E5%8D%8E%E3%80%8A%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E3%80%8B%E4%B9%A0%E9%A2%98%E8%A7%A3%E7%AD%94/">PnYuan</a></p>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 机器学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Leetcode234周周赛题解</title>
      <link href="2021/03/28/LeetcodeWeek234/"/>
      <url>2021/03/28/LeetcodeWeek234/</url>
      
        <content type="html"><![CDATA[<p>第二次打Leetcode的周赛吧，适应了一下做题方式就好了。只能说难度连铜牌题都不到= =，作为退役选手娱乐娱乐还是不错的。</p><h1 id="字符串中不同整数的数目"><a href="#字符串中不同整数的数目" class="headerlink" title="字符串中不同整数的数目"></a><a href="https://leetcode-cn.com/problems/number-of-different-integers-in-a-string/">字符串中不同整数的数目</a></h1><p>签到题，8用多说了，考虑前导零就好。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">numDifferentIntegers</span><span class="params">(<span class="built_in">string</span> word)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> n = word.length();</span><br><span class="line">        <span class="built_in">string</span> temp = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">set</span>&lt;<span class="built_in">string</span>&gt; ans;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;n; ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">isdigit</span>(word[i]))&#123;</span><br><span class="line">                temp += word[i];</span><br><span class="line">                flag= <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">                <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">for</span>(; j!= temp.length(); ++j)&#123;</span><br><span class="line">                    <span class="keyword">if</span>(temp[j] != <span class="number">0</span>)&#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span>(j == temp.length())&#123;</span><br><span class="line">                    ans.insert(<span class="string">&quot;0&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    ans.insert(temp.substr(j,temp.length()-j));</span><br><span class="line">                &#125;</span><br><span class="line">                temp = <span class="string">&quot;&quot;</span>;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">            ans.insert(temp);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans.size();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>复杂度写高了，不过算了一下数据范围就能过就直接交了，其实简单一点第一个0直接插入后面的零不用管就好了，来数字了就把0删了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="built_in">isdigit</span>(word[i]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(temp ==<span class="string">&quot;&quot;</span>)&#123;</span><br><span class="line">        temp+=word[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(temp ==<span class="string">&quot;0&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(word[i] != <span class="string">&#x27;0&#x27;</span>)&#123;</span><br><span class="line">            temp.pop_back();</span><br><span class="line">            temp += word[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>把维护部分改成这样就好了。</p><h1 id="还原排列的最少操作步数"><a href="#还原排列的最少操作步数" class="headerlink" title="还原排列的最少操作步数"></a><a href="https://leetcode-cn.com/problems/minimum-number-of-operations-to-reinitialize-a-permutation/">还原排列的最少操作步数</a></h1><p>这题做的时候本来还想用数学的方法来做，可惜数据范围太水了。果断暴利模拟。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">reinitializePermutation</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">string</span> s = <span class="string">&quot;&quot;</span>,ss = <span class="string">&quot;&quot;</span>, ne = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>;i &lt;n; ++i)&#123;</span><br><span class="line">            s.push_back(<span class="string">&#x27;0&#x27;</span>+i+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ss = s;</span><br><span class="line">        ne.assign(n,<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>(ne != s)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i= <span class="number">0</span>; i&lt;n;++i)&#123;</span><br><span class="line">                <span class="keyword">if</span>(i%<span class="number">2</span> == <span class="number">0</span>)&#123;</span><br><span class="line">                    ne[i] = ss[i/<span class="number">2</span>];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    ne[i] = ss[n/<span class="number">2</span>+(i<span class="number">-1</span>)/<span class="number">2</span>];</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            ++ans;</span><br><span class="line">            ss = ne;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>用数学的方法：</p><p>对于数组中的元素当前位置为$i$，考虑$ f(i) = 2*i \space mod (n-1) $，其中$f(i)$为元素下一次操作的位置。</p><p>则有$f^k(i) = 2^{k}*i \space mod(n-1)$,即找到$2^k$与$i$对于$n-1$同余。</p><p>令$i$=1，则有：$2^{k}\equiv 1\space mod(n-1)$</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> ans = <span class="number">1</span>,now = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">while</span>(now % (n<span class="number">-1</span>) != <span class="number">1</span>)&#123;</span><br><span class="line">    now*=<span class="number">2</span>;</span><br><span class="line">    ++ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br></pre></td></tr></table></figure><h1 id="替换字符串中的括号内容"><a href="#替换字符串中的括号内容" class="headerlink" title="替换字符串中的括号内容"></a><a href="https://leetcode-cn.com/problems/evaluate-the-bracket-pairs-of-a-string/">替换字符串中的括号内容</a></h1><p>这题直接用map维护knowledge数组就可以了，比上一题还简单。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="built_in">string</span> <span class="title">evaluate</span><span class="params">(<span class="built_in">string</span> s, <span class="built_in">vector</span>&lt;<span class="built_in">vector</span>&lt;<span class="built_in">string</span>&gt;&gt;&amp; knowledge)</span> </span>&#123;</span><br><span class="line">        <span class="built_in">map</span>&lt;<span class="built_in">string</span>,<span class="built_in">string</span>&gt; mp;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i =<span class="number">0</span>; i != knowledge.size();++i)&#123;</span><br><span class="line">            mp[knowledge[i][<span class="number">0</span>]] = knowledge[i][<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">string</span> ss,ans=<span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">bool</span> flag = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i&lt; s.length(); ++i)&#123;</span><br><span class="line">            <span class="keyword">if</span>(s[i] == <span class="string">&#x27;(&#x27;</span>)&#123;</span><br><span class="line">                flag = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(s[i] == <span class="string">&#x27;)&#x27;</span>)&#123;</span><br><span class="line">                flag = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span>(mp.count(ss) &gt;=<span class="number">1</span>)&#123;</span><br><span class="line">                    ans += mp[ss];</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    ans += <span class="string">&quot;?&quot;</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                ss = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(flag == <span class="number">1</span>)&#123;</span><br><span class="line">                ss.push_back(s[i]);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                ans.push_back(s[i]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h1 id="好因子的最大数目"><a href="#好因子的最大数目" class="headerlink" title="好因子的最大数目"></a><a href="https://leetcode-cn.com/problems/maximize-number-of-nice-divisors/">好因子的最大数目</a></h1><p>这题只能说经验积累到位了。看完题目想到$2^k$可以得到$k$个好因子贡献。再看样例直接拆分成3个2和两个5，把5拆成了两个质数相乘，一看2和3，直接肌肉记忆。把k尽可能的拆成多个3然后相乘就可以得到最大的答案了。（别问为什么，我也忘记怎么证明了。好像是两年前做的剑指offer？）特别考虑$k\%3==1$和$k\%3==2$的情况，当为1时，要把其中一个3和1组合成两个2。然后敲个快速幂就好了。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll a,ll p)</span></span>&#123;</span><br><span class="line">    ll res = <span class="number">1</span>,aa =a;;</span><br><span class="line">    <span class="keyword">while</span>(p)&#123;</span><br><span class="line">        <span class="keyword">if</span>(p &amp; <span class="number">1</span>)&#123;</span><br><span class="line">            res = res *aa % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        aa = aa* aa % mod;</span><br><span class="line">        p&gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res % mod;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> &#123;</span></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">maxNiceDivisors</span><span class="params">(<span class="keyword">int</span> primeFactors)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(primeFactors &lt;= <span class="number">1</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        ll ans = <span class="number">0</span>,mm = primeFactors%<span class="number">3</span>, ms = primeFactors/<span class="number">3</span>;</span><br><span class="line">        <span class="keyword">if</span>(mm== <span class="number">1</span>)&#123;</span><br><span class="line">            ans = qpow(<span class="number">3</span>,ms<span class="number">-1</span>);</span><br><span class="line">            ans = ans * <span class="number">4</span> %mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(mm == <span class="number">2</span>)&#123;</span><br><span class="line">            ans = qpow(<span class="number">3</span>,ms);</span><br><span class="line">            ans = ans *<span class="number">2</span> % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            ans = qpow(<span class="number">3</span>,ms);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>TopTenAthletes</title>
      <link href="2020/11/23/TopTenAthletes/"/>
      <url>2020/11/23/TopTenAthletes/</url>
      
        <content type="html"><![CDATA[<h1 id="十佳运动员"><a href="#十佳运动员" class="headerlink" title="十佳运动员"></a>十佳运动员</h1><p>​    要求大概是做一个运动员的计票和成绩系统吧，年代过于久远不记得了。</p><p>​    今天忽然翻到自己以前先的代码，想当年还是刚刚学会C语言，非常感慨自己以前写的代码原来这么规范(★ ω ★)。（我也不知道是不是从课设书上抄的吧。。。）总之肯定是自己手打的。</p><p>​    现在的代码过两天自己都看不懂了，裂开。</p><h2 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 20    <span class="comment">/*运动员数*/</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> M 20       <span class="comment">/*参选者数*/</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> n,m;    <span class="comment">/*传递候选运动员及选票数目*/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sporter</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> num;</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> vote_num;</span><br><span class="line">&#125;spt[N];</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">vote</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">char</span> id[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">char</span> address[<span class="number">20</span>];</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line"><span class="keyword">int</span> score_order;</span><br><span class="line"><span class="keyword">int</span> score_hit;</span><br><span class="line"><span class="keyword">int</span> score_sum;</span><br><span class="line">&#125;vot[M];</span><br><span class="line"></span><br><span class="line"><span class="comment">/*                       功能模块                         */</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">stat</span><span class="params">()</span></span>;                   <span class="comment">/*统计模块*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">readfiles</span><span class="params">()</span></span>;                     <span class="comment">/*从文件读入候选运动员及选票记录*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">load_sporter</span><span class="params">()</span></span>;                   <span class="comment">/*加载候选运动员记录并计算记录的个数*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printf_one</span><span class="params">(<span class="keyword">int</span> i)</span></span>;               <span class="comment">/*显示一条运动员记录*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printf_n</span><span class="params">(<span class="keyword">int</span> n)</span></span>;                      <span class="comment">/*显示n条运动员记录*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">load_vote</span><span class="params">()</span></span>;                         <span class="comment">/***加载选票记录**并计算记录个数*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calctensp</span><span class="params">()</span></span>;              <span class="comment">/*计算十佳运动员*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">stat_vote</span><span class="params">(<span class="keyword">int</span> m)</span></span>;           <span class="comment">/*根据得票数对运动员记录进行排序*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">order_by_vote</span><span class="params">(<span class="keyword">int</span> m)</span></span>;           <span class="comment">/*根据得票数对运动员记录进行排序*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_spt10</span><span class="params">()</span></span>;           <span class="comment">/*输出十佳运动员信息*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">save_spt</span><span class="params">()</span></span>;         <span class="comment">/*将十佳运动员信息输出到文件中*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">stattenvoter</span><span class="params">()</span></span>;             <span class="comment">/*计算十名参选者*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc_hit</span> <span class="params">(<span class="keyword">int</span> m)</span></span>;       <span class="comment">/*计算选票命中率并输出到文件中*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort_vote</span><span class="params">(<span class="keyword">int</span> m)</span></span>;   <span class="comment">/*对参选者根据命中率排序*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_vot10</span><span class="params">()</span></span>;              <span class="comment">/*显示前十名获奖参选者信息*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">save_vot10</span><span class="params">()</span></span>;          <span class="comment">/*保存前十位获奖参选者信息到文件中*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">()</span></span>;                                  <span class="comment">/*核对选票模块*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">browse_vote</span><span class="params">()</span></span>;            <span class="comment">/*浏览投票记录*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_n_vote</span><span class="params">(<span class="keyword">int</span> m)</span></span>;            <span class="comment">/*显示n条选票记录*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_onevote</span><span class="params">(<span class="keyword">int</span> j)</span></span>;       <span class="comment">/*打印一条投票记录*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">search_vote</span><span class="params">()</span></span>;          <span class="comment">/*搜索参选者的投票记录*/</span></span><br><span class="line"></span><br><span class="line">                  <span class="comment">/*                     公共函数                     */</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printf_back</span><span class="params">()</span></span>;             <span class="comment">/*每个任务结束时的选择(二级菜单)*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printf_backmain</span><span class="params">()</span></span>;            <span class="comment">/*每个任务结束时的选择(主菜单)*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">()</span></span>;                      <span class="comment">/*主菜单函数*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu_vote</span><span class="params">()</span></span>;                     <span class="comment">/*副菜单函数*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> m, w;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t*********************MENU*********************\n\n&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t\t\t 1.statistic&quot;</span>);   <span class="comment">/*统计*/</span></span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t\t\t 2.check_vote&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t\t\t 3.exit&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t ************************************************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Choice your number(1 - 3): [ ]\b\b&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(m &lt; <span class="number">1</span> || m &gt; <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">w = <span class="number">1</span>;</span><br><span class="line">getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">w = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(w == <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">stat();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">check();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">stat</span><span class="params">()</span>                   <span class="comment">/*统计模块*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">readfiles();</span><br><span class="line">calctensp();</span><br><span class="line">stattenvoter();</span><br><span class="line">printf_backmain();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">readfiles</span><span class="params">()</span>                      <span class="comment">/*从文件读入候选运动员及选票记录*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">n = load_sporter();</span><br><span class="line">printf_n(n);</span><br><span class="line">m = load_vote();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">load_sporter</span><span class="params">()</span>             <span class="comment">/*加载候选运动员记录并计算记录的个数*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE *fp;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">if</span>((fp = fopen(<span class="string">&quot;sporter.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nCan not open file\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; !feof(fp); i++)</span><br><span class="line"><span class="built_in">fscanf</span>(fp, <span class="string">&quot;%d%s&quot;</span>, &amp;spt[i].num, &amp;spt[i].name);</span><br><span class="line">fclose(fp);</span><br><span class="line"><span class="keyword">return</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printf_one</span><span class="params">(<span class="keyword">int</span> i)</span>               <span class="comment">/*显示一条运动员记录*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%2d  %-17s  %d \n&quot;</span>, spt[i].num, spt[i].name, spt[i].vote_num);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printf_n</span><span class="params">(<span class="keyword">int</span> n)</span>             <span class="comment">/*显示n条运动员记录*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (j % <span class="number">10</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\nPass any key to contiune ...&quot;</span>);</span><br><span class="line">getch();</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">printf_one(j);</span><br><span class="line">&#125;</span><br><span class="line">getch();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">load_vote</span><span class="params">()</span>      <span class="comment">/***加载选票记录**并计算记录个数*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE *fp;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">if</span> ((fp = fopen(<span class="string">&quot;vote.txt&quot;</span>, <span class="string">&quot;r&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nCan not open file\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; !feof(fp); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fscanf</span>(fp, <span class="string">&quot;%s%s%s&quot;</span>, &amp;vot[i].id, &amp;vot[i].name,&amp;vot[i].address);</span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line"><span class="built_in">fscanf</span>(fp, <span class="string">&quot;%d&quot;</span>, &amp;vot[i].a[j]);</span><br><span class="line">&#125;</span><br><span class="line">fclose(fp);</span><br><span class="line"><span class="keyword">return</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">calctensp</span><span class="params">()</span> <span class="comment">/*计算十佳运动员*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">stat_vote(m);</span><br><span class="line">order_by_vote(n);</span><br><span class="line">print_spt10();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">stat_vote</span><span class="params">(<span class="keyword">int</span> m)</span>         <span class="comment">/*读取选票并加到相应运动员上*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j, k;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line"><span class="keyword">for</span>(k = <span class="number">0</span>; k &lt; <span class="number">20</span>; k++)</span><br><span class="line"><span class="keyword">if</span>(vot[i].a[j] == spt[k].num)</span><br><span class="line">spt[k].vote_num++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">order_by_vote</span><span class="params">(<span class="keyword">int</span> m)</span>           <span class="comment">/*根据得票数对运动员记录进行排序*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j, k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sporter</span> <span class="title">s</span>;</span></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; m - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">k = i;</span><br><span class="line"><span class="keyword">for</span>(j = i + <span class="number">1</span>; j &lt; m; j++)</span><br><span class="line"><span class="keyword">if</span>(spt[j].vote_num &gt; spt[k].vote_num)</span><br><span class="line">k = j;</span><br><span class="line">s = spt[i];</span><br><span class="line">spt[i] = spt[k];</span><br><span class="line">spt[k] = s;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_spt10</span><span class="params">()</span>           <span class="comment">/*输出十佳运动员信息*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\nThe 10 best sporter is :\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;order,num,name,vote_num\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%5d:%3d,%10s,%d \n&quot;</span>, i + <span class="number">1</span>, spt[i].num, spt[i].name, spt[i].vote_num);</span><br><span class="line">&#125;</span><br><span class="line">getch();</span><br><span class="line">save_spt();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">save_spt</span><span class="params">()</span>         <span class="comment">/*将十佳运动员信息输出到文件中*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE *fp1;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">if</span>((fp1 = fopen(<span class="string">&quot;spt10.txt&quot;</span>,<span class="string">&quot;w&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nCan not open file\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line"><span class="built_in">fprintf</span>(fp1,<span class="string">&quot;%d %s %d\n&quot;</span>, spt[i].num, spt[i].name,spt[i].vote_num);</span><br><span class="line">fclose(fp1);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">stattenvoter</span><span class="params">()</span>             <span class="comment">/*计算十名参选者*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">calc_hit(m);</span><br><span class="line">sort_vote(m);</span><br><span class="line">print_vot10();</span><br><span class="line">save_vot10();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">calc_hit</span><span class="params">(<span class="keyword">int</span> m)</span>       <span class="comment">/*计算选票命中率并输出到文件中*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE *fp;</span><br><span class="line"><span class="keyword">int</span> i, j, k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sporter</span> <span class="title">s</span>[10];</span></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">s[i] = spt[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; <span class="number">10</span>; j++)</span><br><span class="line"><span class="keyword">for</span>(k = <span class="number">0</span>; k &lt; <span class="number">10</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(vot[i].a[j] == s[j].num)</span><br><span class="line">vot[i].score_order += <span class="number">9</span> - j;</span><br><span class="line"><span class="keyword">if</span>(vot[i].a[j] == s[k].num)</span><br><span class="line">vot[i].score_hit +=<span class="number">10</span>;</span><br><span class="line">vot[i].score_sum = vot[i].score_hit + vot[i].score_order;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>((fp = fopen(<span class="string">&quot;hit.txt&quot;</span>,<span class="string">&quot;w&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nCan not open the file\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">&quot;%s %d %d %d\n&quot;</span>, vot[i].id, vot[i].score_order, vot[i].score_hit, vot[i].score_sum);</span><br><span class="line">fclose(fp);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">sort_vote</span><span class="params">(<span class="keyword">int</span> m)</span>   <span class="comment">/*对参选者根据命中率排序*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i, j, k;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">vote</span> <span class="title">v</span>;</span></span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; m - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">k = i;</span><br><span class="line"><span class="keyword">for</span>(j = i + <span class="number">1</span>; j &lt; m; j++)</span><br><span class="line"><span class="keyword">if</span> (vot[j].score_sum &gt; vot[k].score_sum)</span><br><span class="line">k = j;</span><br><span class="line">v = vot[i];</span><br><span class="line">vot[i] = vot[k];</span><br><span class="line">vot[k] = v;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_vot10</span><span class="params">()</span>              <span class="comment">/*显示前十名获奖参选者信息*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\nThe best 10 voter is :\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;order,id,name,vote_sum\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%5d:%s,%10s,%d \n&quot;</span>, i+<span class="number">1</span>, vot[i].id, vot[i].name, vot[i].score_sum);</span><br><span class="line">&#125;</span><br><span class="line">getch();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">save_vot10</span><span class="params">()</span>           <span class="comment">/*保存前十位获奖参选者信息到文件中*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FILE *fp1;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">if</span> ((fp1 = fopen(<span class="string">&quot;vot10.txt&quot;</span>,<span class="string">&quot;w&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nCan not open file\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line"><span class="built_in">fprintf</span>(fp1, <span class="string">&quot;%5d: %s,%10s,%d&quot;</span>, i+<span class="number">1</span>, vot[i].id, vot[i].name, vot[i].score_sum);</span><br><span class="line">fclose(fp1);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">check</span><span class="params">()</span>                                  <span class="comment">/*核对选票模块*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m, w;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t*********************MENU*********************\n\n&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t\t\t 1.browse_vote&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t\t\t 2.search_vote&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t\t\t 3.back&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t ************************************************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Choice your number(1 - 3): [ ]\b\b&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(m &lt; <span class="number">1</span> || m &gt; <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">w = <span class="number">1</span>;</span><br><span class="line">getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">w = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(w == <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">browse_vote();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">search_vote();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">menu();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">browse_vote</span><span class="params">()</span>            <span class="comment">/*浏览投票记录*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> k;</span><br><span class="line">k = load_vote();</span><br><span class="line">print_n_vote(k);</span><br><span class="line">printf_back();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_n_vote</span><span class="params">(<span class="keyword">int</span> m)</span>            <span class="comment">/*显示n条选票记录*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line"><span class="keyword">for</span>(j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(j % <span class="number">10</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\nPass any key to contiune ...&quot;</span>);</span><br><span class="line">getch();</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">print_onevote(j);</span><br><span class="line">&#125;</span><br><span class="line">getch();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print_onevote</span><span class="params">(<span class="keyword">int</span> j)</span>       <span class="comment">/*打印一条投票记录*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;vote_id: %s\n&quot;</span>,vot[j].id);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;vote_name: %s  vote_address: %s\n&quot;</span>, vot[j].name, vot[j].address);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;vote_sporter:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d,&quot;</span>, vot[j].a[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">search_vote</span><span class="params">()</span>          <span class="comment">/*搜索参选者的投票记录*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m, i, flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">char</span> vs[<span class="number">20</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please input vote_id:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,vs);</span><br><span class="line">m = load_vote();</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">strcmp</span>(vs,vot[i].id)==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">print_onevote(i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Found!&quot;</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Not found!&quot;</span>);</span><br><span class="line">printf_back();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/*                                                             公共函数                                                         */</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printf_back</span><span class="params">()</span>             <span class="comment">/*每个任务结束时的选择(二级菜单)*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> w;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n\tSuccessful.^_^\n\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;What do you want to do?\n\n\t1).Exit\t2).Back:[]\b\b&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;w);</span><br><span class="line"><span class="keyword">if</span> (w == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">menu_vote();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">printf_backmain</span><span class="params">()</span>             <span class="comment">/*每个任务结束时的选择(主菜单)*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> w;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n\tSuccessful.^_^\n\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;What do you want to do?\n\n\t1).Exit\t2).Back:[]\b\b&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;w);</span><br><span class="line"><span class="keyword">if</span> (w == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">menu();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu</span><span class="params">()</span>          <span class="comment">/*主菜单函数*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m, w;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t*********************MENU*********************\n\n&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t\t\t 1.statistic&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t\t\t 2.check_vote&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t\t\t 3.exit&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t ************************************************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Choice your number(1 - 3): [ ]\b\b&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(m &lt; <span class="number">1</span> || m &gt; <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">w = <span class="number">1</span>;</span><br><span class="line">getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">w = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(w == <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">stat();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">check();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">menu_vote</span><span class="params">()</span>            <span class="comment">/*副菜单函数*/</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> m, w;</span><br><span class="line"></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t*********************MENU*********************\n\n&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t\t\t 1.browse_vote&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t\t\t 2.search_vote&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t\t\t 3.back&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;\t\t ************************************************\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Choice your number(1 - 3): [ ]\b\b&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(m &lt; <span class="number">1</span> || m &gt; <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">w = <span class="number">1</span>;</span><br><span class="line">getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">w = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(w == <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span>(m)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">browse_vote();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">search_vote();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">menu();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Data"><a href="#Data" class="headerlink" title="Data"></a>Data</h2><p>里面需要的数据文件懒得上传了，随便贴一下 （0 0）</p><hr><ul><li>hit.txt</li></ul><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">0000001 0 100 100</span><br><span class="line">0000002 0 0 0</span><br><span class="line">0000003 0 100 100</span><br><span class="line">0000004 0 90 90</span><br><span class="line">0000005 0 90 90</span><br><span class="line">0000006 90 100 190</span><br><span class="line">0000007 0 80 80</span><br><span class="line">0000008 90 90 180</span><br><span class="line">0000009 0 90 90</span><br><span class="line">00000010 30 50 80</span><br></pre></td></tr></table></figure><hr><ul><li>sporter.txt</li></ul><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">01 a1</span><br><span class="line">02 a2</span><br><span class="line">03 a3</span><br><span class="line">04 a4</span><br><span class="line">05 a5</span><br><span class="line">06 a6</span><br><span class="line">07 a7</span><br><span class="line">08 a8</span><br><span class="line">09 a9</span><br><span class="line">10 a10</span><br><span class="line">11 a11</span><br><span class="line">12 a12</span><br><span class="line">13 a13</span><br><span class="line">14 a14</span><br><span class="line">15 a15</span><br><span class="line">16 a16</span><br><span class="line">17 a17</span><br><span class="line">18 a18</span><br><span class="line">19 a19</span><br><span class="line">20 a20</span><br></pre></td></tr></table></figure><hr><ul><li>spt10.txt</li></ul><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">3 a3 15</span><br><span class="line">7 a7 8</span><br><span class="line">9 a9 8</span><br><span class="line">10 a10 8</span><br><span class="line">6 a6 7</span><br><span class="line">2 a2 7</span><br><span class="line">1 a1 7</span><br><span class="line">4 a4 7</span><br><span class="line">5 a5 6</span><br><span class="line">8 a8 6</span><br></pre></td></tr></table></figure><hr><ul><li>vot10.txt</li></ul><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1: 0000006,     vote6,190    </span><br><span class="line">2: 0000008,     vote8,180    </span><br><span class="line">3: 0000003,     vote3,100    </span><br><span class="line">4: 0000001,     vote1,100    </span><br><span class="line">5: 0000005,     vote5,90    </span><br><span class="line">6: 0000004,     vote4,90    </span><br><span class="line">7: 0000009,     vote9,90    </span><br><span class="line">8: 0000007,     vote7,80    </span><br><span class="line">9: 00000010,    vote10,80   </span><br><span class="line">10: 0000002,     vote2,0</span><br></pre></td></tr></table></figure><hr><ul><li>vote.txt</li></ul><figure class="highlight tex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">0000001 vote1 address1 01 02 03 04 05 06 07 08 09 10</span><br><span class="line">0000002 vote2 address2 11 12 13 14 15 16 17 18 19 20</span><br><span class="line">0000003 vote3 address3 01 02 03 04 05 06 07 08 09 10</span><br><span class="line">0000004 vote4 address4 01 11 03 04 05 06 07 08 09 10</span><br><span class="line">0000005 vote5 address5 01 02 03 04 03 06 07 13 09 10</span><br><span class="line">0000006 vote6 address6 03 02 03 04 05 03 07 08 09 10</span><br><span class="line">0000007 vote7 address7 01 11 03 04 05 06 07 08 11 10</span><br><span class="line">0000008 vote8 address8 03 02 03 04 05 06 03 13 09 10</span><br><span class="line">0000009 vote9 address9 01 02 03 14 03 06 07 08 09 10</span><br><span class="line">00000010 vote10 address10 14 15 07 03 18 11 01 02 09</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 课程设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 课程设计 </tag>
            
            <tag> 杂谈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博弈论 (Game)</title>
      <link href="2020/10/13/boyilun/"/>
      <url>2020/10/13/boyilun/</url>
      
        <content type="html"><![CDATA[<p>咕咕咕了好久终于记得更新了=-=这次随便整理一些以前的东西吧（氵）2020-10-13</p><h1 id="规则"><a href="#规则" class="headerlink" title="规则"></a>规则</h1><ul><li>公平博弈</li><li>PLAY TO WIN</li></ul><h1 id="巴什博奕-Bash-Game"><a href="#巴什博奕-Bash-Game" class="headerlink" title="巴什博奕 (Bash Game)"></a>巴什博奕 (Bash Game)</h1><p>​    一堆里有n个物品，轮流取1~m个，最后取的为胜者<br>​    根据公平博弈原理，一个人只要取k个另一个也一样取就可以将胜负态维持。此时根据同余定理：$ n = k\ast (m+1)+r  $ 此时只要先手拿走$r$个使得$（n-r）% (m+1) = 0$ 则先手必赢。若$ n = k \ast (m +  1) $,则先手必败。</p><h1 id="威佐夫博弈-Wythoff-Game"><a href="#威佐夫博弈-Wythoff-Game" class="headerlink" title="威佐夫博弈 (Wythoff Game)"></a>威佐夫博弈 (Wythoff Game)</h1><p>​    有<font color=red>两堆</font>各若干物品，两人轮流从任意一堆中取出大于零的任意个数或者从两堆中取出同样多的大于零的任意个数物品，最后取的为胜者。<br>​    枚举每个必输的局势：$(0,0),(1,2),(3,5),(4,7),(6,10),(8,13),(9,15),(11,18),(12,20)$可以发现每组的$first$为前面没有出现过的最小整数，根据玄学找规律定理可以得到$first$的出现规律为黄金分割比，$second$出现的规律为$first + k $(k表示第k组必败态)。则有</p><script type="math/tex; mode=display">first = \lfloor k \ast (1+ \sqrt{5}) \div 2 \rfloor</script><script type="math/tex; mode=display">second = first + k</script><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> r = (<span class="built_in">sqrt</span>(<span class="number">5</span>) +<span class="number">1</span> )/<span class="number">2</span>;</span><br><span class="line"><span class="keyword">int</span> d = <span class="built_in">abs</span>(a-b) * r;</span><br><span class="line"><span class="keyword">if</span>(d ！= min(a,b)) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br></pre></td></tr></table></figure><h1 id="斐波那契博弈-Fibonacci-Nim-Game"><a href="#斐波那契博弈-Fibonacci-Nim-Game" class="headerlink" title="斐波那契博弈 (Fibonacci Nim Game)"></a>斐波那契博弈 (Fibonacci Nim Game)</h1><p>​    一堆石子有n个，两人轮流取石子，先取的人可以取任意多个（大于零）石子，但不能一次取完，之后每次取的石子数不能超过上次取的石子数的<font color = blue>2倍</font>同时要大于零，最后取为胜者。</p><p>​    当n不是斐波那契数时，先手必胜。</p><blockquote><p>证明：</p><ul><li>Zeckendorf定理（齐肯多夫定理）：任何正整数可以表示为若干个不连续的Fibonacci数只和。</li><li>当n不为Fibonacci数，如$28 = 21+5+2$，假如先手取2，则后手无法取5或更多，而5是Fibonacci数，那么一定是先手去取走这5颗石子中的最后一颗，同理推导到21颗，28颗。</li><li>当n为Fibonacci数，如89，则设先手取x颗：<ol><li>当$ x \geq 34$即89的前两项，则后手必赢</li><li>当$ x  \lt 34$，则此时剩下的数介于55~89之间，不为Fibonacci数，把$y = n-x$分解为Fibonacci数: $ y = 55 + f[i]+…+f[j]$,若$f[j] \leq 2\times x$,则后手面临n不为Fibonacci数的情况，后手必赢</li></ol></li></ul></blockquote><h1 id="尼姆博弈-Nimm-Game"><a href="#尼姆博弈-Nimm-Game" class="headerlink" title="尼姆博弈 (Nimm Game)"></a>尼姆博弈 (Nimm Game)</h1><p>​    有n堆物品每堆物品的个数不定但大于1，两人轮流取，每次取任意一堆中物品不少于一个，最后取为胜者。</p><p>​    在$(a,b,c)$状态下无论先手取什么，后手都可以在另外一堆里取相同的个数来抵消先手的影响，则可推出对于每一个堆物品的个数$m_i$，当$m_0 \oplus m_1 … \oplus m_n = 0$时先手必败，否则先手必胜</p><h1 id="SG函数"><a href="#SG函数" class="headerlink" title="SG函数"></a>SG函数</h1><p>​    定义$mex$运算为不属于一个集合的最小正整数，对于一个有向无环图，定义$G(x) = mex\big(G(y)\big)$y为x的后继节点。将每一堆有$x_i$个石子看成$G(x_i)$,则$SG(i) = G(x_i)$，打表枚举每一个$G(x_i)$,则可得到规律,若没有规律就打表暴力过题:)</p><p>对于<a href="http://acm.hdu.edu.cn/showproblem.php?pid=3032">HDU-3032</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;<span class="comment">//SG函数打表</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;<span class="comment">//枚举100个状态</span></span><br><span class="line">        <span class="built_in">memset</span>(vis,<span class="number">0</span>,<span class="keyword">sizeof</span>(vis));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;=i;j++)&#123;</span><br><span class="line">            vis[sg[i-j]]=<span class="literal">true</span>;   <span class="comment">//对每个i下可以到达的状态枚举</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">1</span>;j&lt;i;j++)&#123;<span class="comment">//特殊枚举，枚举分成两块的状态</span></span><br><span class="line">            vis[sg[j]^sg[i-j]]=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;;j++)&#123; <span class="comment">//找mex</span></span><br><span class="line">            <span class="keyword">if</span>(!vis[j])&#123;</span><br><span class="line">                sg[i]=j;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">100</span>;i++)&#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;sg[i]&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>之后可以得到规律</p><script type="math/tex; mode=display">G(x) = \begin{cases}x-1& &(x \mod 4 &= 0) \\\\x& &(x\mod4&=1\&2) \\\\x+1& &(x\mod4 &=3) \end{cases}</script><p>之后判断$SG(1)\oplus SG(2) \oplus … \oplus SG(i) \oplus … \oplus SG(n) == 0$即可得到答案</p><h1 id="不公平博弈"><a href="#不公平博弈" class="headerlink" title="不公平博弈"></a>不公平博弈</h1><p>纯粹找规律，作弊的一方在物品堆数增加到一定个数时比能够改变胜负态来达到无论如何都必赢的状态，枚举全1的特殊态找规律即可</p><p>2018CCPC 杭州 C  Hakase and Nano （没写题解=-=）</p>]]></content>
      
      
      <categories>
          
          <category> ACM模板 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博弈论 </tag>
            
            <tag> 模板 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一个神经网络程序</title>
      <link href="2020/08/20/FristNN/"/>
      <url>2020/08/20/FristNN/</url>
      
        <content type="html"><![CDATA[<blockquote><p>引用自<a href="https://zhuanlan.zhihu.com/p/67682601">知乎</a></p></blockquote><h1 id="神经网络"><a href="#神经网络" class="headerlink" title="神经网络"></a>神经网络</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>神经网络包含输入层，隐藏层，激活层，输出层，Softmax层以及Cross Entropy Error层</p><p>传播公式为 ==$H = X \ast W + b$==</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">affine_forward</span>(<span class="params">x,w,b</span>):</span></span><br><span class="line">    out = <span class="literal">None</span></span><br><span class="line">    N = x.shape[<span class="number">0</span>]</span><br><span class="line">    x_row = x.reshape(N, <span class="number">-1</span>)</span><br><span class="line">    out = np.dot(x_row, w) + b</span><br><span class="line">    cache = (x, w, b)</span><br><span class="line">    <span class="keyword">return</span> out, cache</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">affine_backward</span>(<span class="params">dout, cache</span>):</span></span><br><span class="line">    x, w, b = cache</span><br><span class="line">    dx, dw, db = <span class="literal">None</span>, <span class="literal">None</span>, <span class="literal">None</span></span><br><span class="line">    dx = np.dot(dout, w.T)</span><br><span class="line">    dx = np.reshape(dx, x.shape)</span><br><span class="line">    x_row = x.reshape(x.shape[<span class="number">0</span>], <span class="number">-1</span>)</span><br><span class="line">    dw = np.dot(x_row.T, dout)</span><br><span class="line">    db = np.sum(dout, axis = <span class="number">0</span>, keepdims = <span class="literal">True</span>)</span><br><span class="line">    <span class="keyword">return</span> dx, dw, db</span><br><span class="line"></span><br><span class="line"><span class="comment">#训练数据</span></span><br><span class="line">X = np.array([[<span class="number">2</span>, <span class="number">1</span>],</span><br><span class="line">             [<span class="number">-1</span>, <span class="number">1</span>],</span><br><span class="line">             [<span class="number">-1</span>, <span class="number">-1</span>],</span><br><span class="line">             [<span class="number">1</span>, <span class="number">-1</span>]])</span><br><span class="line">t = np.array([<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>])  <span class="comment">#标准结果</span></span><br><span class="line">np.random.seed(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">input_dim = X.shape[<span class="number">1</span>]</span><br><span class="line">num_classes = t.shape[<span class="number">0</span>]</span><br><span class="line">hidden_dim = <span class="number">50</span></span><br><span class="line">reg = <span class="number">0.001</span>  <span class="comment">#正则化强度</span></span><br><span class="line">epsilon = <span class="number">0.001</span>  <span class="comment">#学习率</span></span><br><span class="line"></span><br><span class="line">W1 = np.random.randn(input_dim,hidden_dim)</span><br><span class="line">W2 = np.random.randn(hidden_dim, num_classes)</span><br><span class="line">b1 = np.zeros((<span class="number">1</span>, hidden_dim))</span><br><span class="line">b2 = np.zeros((<span class="number">1</span>, num_classes))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> range(<span class="number">10000</span>):</span><br><span class="line">    <span class="comment">#向前传播</span></span><br><span class="line">    H, fc_cache = affine_forward(X, W1, b1)</span><br><span class="line">    H = np.maximum(<span class="number">0</span>, H) <span class="comment">#激活层</span></span><br><span class="line">    relu_cache = H</span><br><span class="line">    Y, cachey = affine_forward(H, W2, b2)</span><br><span class="line">    <span class="comment">#Softmax</span></span><br><span class="line">    probs = np.exp(Y-np.max(Y, axis=<span class="number">1</span>, keepdims=<span class="literal">True</span>))</span><br><span class="line">    probs /= np.sum(probs, axis=<span class="number">1</span>, keepdims=<span class="literal">True</span>)</span><br><span class="line">    <span class="comment">#loss值</span></span><br><span class="line">    N = Y.shape[<span class="number">0</span>]</span><br><span class="line">    print(probs[np.arange(N)], t)</span><br><span class="line">    loss = -np.sum(np.log(probs[np.arange(N), t])) / N</span><br><span class="line">    print(loss)</span><br><span class="line">    <span class="comment">#反向传播</span></span><br><span class="line">    dx = probs.copy()</span><br><span class="line">    dx[np.arange(N), t] -= <span class="number">1</span> <span class="comment">#</span></span><br><span class="line">    dx /= N  <span class="comment">#反向传播到softmax前</span></span><br><span class="line">    dh1, dW2, db2, = affine_backward(dx, cachey)</span><br><span class="line">    dh1[relu_cache &lt;= <span class="number">0</span>] = <span class="number">0</span> <span class="comment">#激活层前</span></span><br><span class="line">    dX, dW1, db1 = affine_backward(dh1,fc_cache)</span><br><span class="line"></span><br><span class="line">    dW2 += reg * W2</span><br><span class="line">    dW1 += reg * W1</span><br><span class="line">    W2 += -epsilon * dW2</span><br><span class="line">    b2 += -epsilon * db2</span><br><span class="line">    W1 += -epsilon * dW1</span><br><span class="line">    b1 += -epsilon * db1</span><br><span class="line"></span><br><span class="line">test = np.array([[<span class="number">2</span>,<span class="number">2</span>],[<span class="number">-2</span>,<span class="number">2</span>],[<span class="number">-2</span>,<span class="number">-2</span>],[<span class="number">2</span>,<span class="number">-2</span>]])</span><br><span class="line">H,fc_cache = affine_forward(test,W1,b1)               <span class="comment">#仿射</span></span><br><span class="line">H = np.maximum(<span class="number">0</span>, H)                                  <span class="comment">#激活</span></span><br><span class="line">relu_cache = H</span><br><span class="line">Y,cachey = affine_forward(H,W2,b2)  <span class="comment">#仿射</span></span><br><span class="line"> <span class="comment"># Softmax</span></span><br><span class="line">probs = np.exp(Y - np.max(Y, axis=<span class="number">1</span>, keepdims=<span class="literal">True</span>))</span><br><span class="line">probs /= np.sum(probs, axis=<span class="number">1</span>, keepdims=<span class="literal">True</span>)  <span class="comment"># Softmax</span></span><br><span class="line">print(probs)</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> range(<span class="number">4</span>):</span><br><span class="line">    print(test[k,:],<span class="string">&quot;所在的象限为&quot;</span>,np.argmax(probs[k,:])+<span class="number">1</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 神经网络 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 神经网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Procrustes analysis(普氏分析)</title>
      <link href="2020/08/18/Procrustes%20analysis/"/>
      <url>2020/08/18/Procrustes%20analysis/</url>
      
        <content type="html"><![CDATA[<h1 id="应用"><a href="#应用" class="headerlink" title="应用"></a>应用</h1><p>通常应用与数据的归一化以及人脸识别中的人脸对齐。及将一个向量通过平移、旋转，缩放等操作使他们尽可能的对其第二个向量的点。（PS：AI换脸 ​/xyx）</p><h1 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h1><script type="math/tex; mode=display">\begin{align} \begin{bmatrix} u \\ v \\ \end{bmatrix} & = \begin{bmatrix} a_2 & a_1 & a_0 \\ b_2 & b_1 & b_0 \\ \end{bmatrix} \begin{bmatrix} x \\ y \\ 1 \\ \end{bmatrix} \\ & = s\begin{bmatrix} cos\theta & -sin\theta \\ sin\theta & cos\theta \\ \end{bmatrix} \begin{bmatrix} x  \\ y \\ \end{bmatrix}+\begin{bmatrix} t_1  \\ t_2 \\ \end{bmatrix} \\  & = sR \begin{bmatrix} x  \\ y \\ \end{bmatrix}+T \end{align}</script><p>(计算机图形学基础内容)</p><p>R是正交矩阵$R^TR=I$</p><p>设两个图像的矩阵为q和p，则有：</p><script type="math/tex; mode=display">Loss = \sum_{i=1}^{N} \begin{Vmatrix}sRp_i^T + T - q_i^T\end{Vmatrix} ^{2}</script><p>求Loss最小则有</p><script type="math/tex; mode=display">\begin{aligned}& \underset{s,R,T} {\arg min} \begin{Vmatrix} sRp^T + T - q^T \end{Vmatrix}_F \\ & s.t. \, R^TR = I \end{aligned}</script><p>根据wiki百科中<a href="https://en.wikipedia.org/wiki/Orthogonal_Procrustes_problem">Orthogonal Procrustes problem</a>的证明，可以得到：</p><script type="math/tex; mode=display">\begin{aligned}  & M = QP^T \\ & svd(M) = U\Sigma V^T \\ & R = UV^T \\ \end{aligned}</script><p>$svd$为求奇异矩阵函数</p><h2 id="第一步-平移"><a href="#第一步-平移" class="headerlink" title="第一步 平移"></a>第一步 平移</h2><ul><li><p>求样本点i(i = 1, 2, …, n)在图像中的均值</p><script type="math/tex; mode=display">\left(\overline{x_i}, \overline{y_i}\right) = \left(\frac{1}{N} \sum_{i=1}^{N}{x_{i}}, \frac{1}{N} \sum_{i=1}^{N}{y_{i}}\right)</script></li><li><p>将点的坐标减去求得的样本点均值，使其对齐原点</p><script type="math/tex; mode=display">(x_{i}^{'}, y_{i}^{'}) = (x_i - \overline{x}_i, y_i - \overline{y}_i)</script></li></ul><h2 id="第二步-缩放"><a href="#第二步-缩放" class="headerlink" title="第二步 缩放"></a>第二步 缩放</h2><ul><li><p>计算图像的标准差</p><script type="math/tex; mode=display">s = \sqrt\frac{\sum_{i=1}^{n}\left[(x_{i} - \overline x)^2 + (y_{i}- \overline y)^2\right]}{N}</script></li><li><p>缩放图像</p><script type="math/tex; mode=display">x_i = x_{i}^{'}/s</script><script type="math/tex; mode=display">y_i = y^{'}_i / s</script></li></ul><h2 id="第三步-旋转"><a href="#第三步-旋转" class="headerlink" title="第三步 旋转"></a>第三步 旋转</h2><p>求解出$R$</p><script type="math/tex; mode=display">\begin{aligned}  & M = QP^T \\ & svd(M) = U\Sigma V^T \\ & R = UV^T \\ \end{aligned}</script><h2 id="extra"><a href="#extra" class="headerlink" title="extra"></a>extra</h2><p> 还可以用最小二乘法实现，具体内容请看<a href="https://en.wikipedia.org/wiki/Procrustes_analysis">Procrustes analysis</a></p><h1 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">trans</span>(<span class="params">p,q</span>):</span></span><br><span class="line">    p = p.astype(np.float64)</span><br><span class="line">    q = q.astype(np.float64)</span><br><span class="line">    c1 = numpy.mean(p, axis=<span class="number">0</span>)</span><br><span class="line">    c2 = numpy.mean(q, axis=<span class="number">0</span>)</span><br><span class="line">    p -= c1</span><br><span class="line">    q -= c2</span><br><span class="line"> </span><br><span class="line">    s1 = numpy.std(p)</span><br><span class="line">    s2 = numpy.std(q)</span><br><span class="line">    p /= s1</span><br><span class="line">    q /= s2</span><br><span class="line">    </span><br><span class="line">    U, S, Vt = numpy.linalg.svd(numpy.dot(q,p.T))</span><br><span class="line">    R = numpy.dot(U,Vt)</span><br><span class="line">    </span><br><span class="line">    s = s2/s1</span><br><span class="line">    sR = s * R</span><br><span class="line">    c1 = c1.reshape(<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">    c2 = c2.reshape(<span class="number">2</span>,<span class="number">1</span>)</span><br><span class="line">    T = c2 - np.dot(sR,c1)</span><br><span class="line"></span><br><span class="line">    trans_mat = numpy.hstack([sR,T])   <span class="comment"># 2x3的仿射变换矩阵</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> trans_mat</span><br></pre></td></tr></table></figure><h1 id="趣闻"><a href="#趣闻" class="headerlink" title="趣闻"></a>趣闻</h1><p>Procrustes的名字来源于古希腊神话中的一个强盗，他经常将受害者的肢体切断来与床相匹配。</p><h1 id="参考文献"><a href="#参考文献" class="headerlink" title="参考文献"></a>参考文献</h1><p><a href="https://www.cnblogs.com/shouhuxianjian/p/10058174.html">face alignment</a></p><p><a href="https://blog.csdn.net/tinyzhao/article/details/53169818">人脸对齐：Procrustes analysis</a></p><p><a href="https://en.wikipedia.org/wiki/Procrustes_analysis">Procrustes analysis</a></p>]]></content>
      
      
      <categories>
          
          <category> CV </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CV 人脸识别 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>牛客多校第九场</title>
      <link href="2020/08/10/nowcoderM9/"/>
      <url>2020/08/10/nowcoderM9/</url>
      
        <content type="html"><![CDATA[<h1 id="A-Groundhog-and-2-Power-Representation"><a href="#A-Groundhog-and-2-Power-Representation" class="headerlink" title="A-Groundhog and 2-Power Representation"></a>A-<a href="https://ac.nowcoder.com/acm/contest/5674/A">Groundhog and 2-Power Representation</a></h1><p>一道简单的字符串替换题，主要是考高精运算。运用python较为简单</p><h2 id="模拟法"><a href="#模拟法" class="headerlink" title="模拟法"></a>模拟法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">s = input()</span><br><span class="line">res = <span class="number">0</span></span><br><span class="line">array = []</span><br><span class="line">length = len(s)</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; length:</span><br><span class="line">    <span class="comment"># print(i)</span></span><br><span class="line">    <span class="keyword">if</span> s[i] == <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> s[i] == <span class="string">&#x27;)&#x27;</span>:</span><br><span class="line">        tmp = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> array[<span class="number">-1</span>] != <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">            tmp += int(array[<span class="number">-1</span>])</span><br><span class="line">            array.pop()</span><br><span class="line">        array.pop()</span><br><span class="line">        array.pop()</span><br><span class="line">        array.append(<span class="number">2</span> ** tmp)</span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">if</span> s[i] == <span class="string">&#x27;(&#x27;</span>:</span><br><span class="line">            array.append(s[i])</span><br><span class="line">            i = i + <span class="number">1</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        tmp = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; length <span class="keyword">and</span> s[i] != <span class="string">&#x27;(&#x27;</span> <span class="keyword">and</span> s[i] != <span class="string">&#x27;)&#x27;</span> <span class="keyword">and</span> s[i] != <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">            tmp += s[i]</span><br><span class="line">            i = i + <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> tmp != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            array.append(tmp)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            i = i + <span class="number">1</span></span><br><span class="line">    <span class="comment"># print(array)</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(array)):</span><br><span class="line">    res += int(array[i])</span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 2(2+2(10))</span></span><br><span class="line"><span class="comment"># 2(2+2(3))</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="运用库函数快速解决"><a href="#运用库函数快速解决" class="headerlink" title="运用库函数快速解决"></a>运用库函数快速解决</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s = input()</span><br><span class="line">print(eval(s.replace(<span class="string">&#x27;(&#x27;</span>,<span class="string">&#x27;**(&#x27;</span>)))</span><br></pre></td></tr></table></figure><h1 id="E-Groundhog-Chasing-Death"><a href="#E-Groundhog-Chasing-Death" class="headerlink" title="E - Groundhog Chasing Death"></a>E - <a href="https://ac.nowcoder.com/acm/contest/5674/E">Groundhog Chasing Death</a></h1><ul><li>唯一分解定理，筛选质因子，费马小定理</li></ul><p>运用唯一分解定理与gcd的结合很快就可以得到思路。</p><p>这题有两个坑：</p><ol><li><p>不能直接使用欧拉筛的方法筛选出质因子，因为数据范围太大了。</p></li><li><p>在求结果的时候先把幂次相加并用费马小定理减小幂次，不然会TLE</p></li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">define</span> mod 998244353</span></span><br><span class="line"></span><br><span class="line"><span class="function">ll <span class="title">qpow</span><span class="params">(ll a, ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    ll re = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n &amp; <span class="number">1</span>)</span><br><span class="line">            re = (re * a) % mod;</span><br><span class="line">        n &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">        a = (a * a) % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> re % mod;</span><br><span class="line">&#125;</span><br><span class="line">ll a, b, c, d, x, y;</span><br><span class="line">ll ans;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">solve</span><span class="params">(<span class="keyword">int</span> p)</span> </span>&#123;</span><br><span class="line">    ll aa = <span class="number">0</span>, bb = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (x % p == <span class="number">0</span>) x /= p, aa++;</span><br><span class="line">    <span class="keyword">while</span> (y % p == <span class="number">0</span>) y /= p, bb++;</span><br><span class="line">    <span class="keyword">if</span> (!aa || !bb) <span class="keyword">return</span>;</span><br><span class="line">    ll tmp = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (ll i = a; i &lt;= b; i++) &#123;</span><br><span class="line">        ll j = aa * i / bb;</span><br><span class="line">        ll cur, now;</span><br><span class="line">        <span class="keyword">if</span> (j &lt; c) cur = (d - c + <span class="number">1</span>) * i % (mod<span class="number">-1</span>) * aa % (mod<span class="number">-1</span>);   <span class="comment">//费马小定理以及幂次相加</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (j &gt;= d) cur = (c + d) * (d - c + <span class="number">1</span>) / <span class="number">2</span> % (mod<span class="number">-1</span>) * bb % (mod<span class="number">-1</span>);</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            now = (c + j) * (j - c + <span class="number">1</span>) / <span class="number">2</span> % (mod<span class="number">-1</span>) * bb % (mod<span class="number">-1</span>);</span><br><span class="line">            cur = (now + (d - j) * i % (mod<span class="number">-1</span>) * aa % (mod<span class="number">-1</span>) )% (mod<span class="number">-1</span>);</span><br><span class="line">             &#125;</span><br><span class="line">        tmp = (tmp + cur) % (mod<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ans = ans * qpow(p, tmp) % mod;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    ans = <span class="number">1l</span>l;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld%lld%lld%lld%lld&quot;</span>,&amp;a,&amp;b,&amp;c,&amp;d,&amp;x,&amp;y);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">2</span>; k &lt;= x; k++) <span class="keyword">if</span> (x % k == <span class="number">0</span>) solve(k);  <span class="comment">//筛选质因子</span></span><br><span class="line">    <span class="keyword">if</span> (x &gt; <span class="number">1</span>) solve(x);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>,ans);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​     </p><h1 id="F-Groundhog-Looking-Dowdy"><a href="#F-Groundhog-Looking-Dowdy" class="headerlink" title="F- Groundhog Looking Dowdy"></a>F- <a href="https://ac.nowcoder.com/acm/contest/5674/F">Groundhog Looking Dowdy</a></h1><p>尺取法就可以过了</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> <span class="meta-keyword">warning</span>(disable:4996)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> N = <span class="number">1e6</span> + <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">int</span> val, id;</span><br><span class="line">&#125;a[N &lt;&lt; <span class="number">1</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">mycmp</span><span class="params">(Node a, Node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> a.val &lt; b.val;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">bool</span> book[N];</span><br><span class="line"><span class="keyword">int</span> num[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> n, m, k = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= k; ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[++cnt].val);</span><br><span class="line">a[cnt].id = i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">sort(a + <span class="number">1</span>, a + cnt + <span class="number">1</span>, mycmp);</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>, r = <span class="number">2</span>, size = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">int</span> ans = <span class="number">0x7f7f7f7f</span>;</span><br><span class="line"></span><br><span class="line">book[a[l].id] = <span class="literal">true</span>;</span><br><span class="line">num[a[l].id] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (book[a[r].id] == <span class="literal">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">++size;</span><br><span class="line">book[a[r].id] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">++num[a[r].id];</span><br><span class="line"><span class="keyword">while</span> (l &lt; r &amp;&amp; r &lt;= cnt)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (size &lt; m)</span><br><span class="line">&#123;</span><br><span class="line">++r;</span><br><span class="line"><span class="keyword">if</span> (book[a[r].id] == <span class="literal">false</span>)</span><br><span class="line">&#123;</span><br><span class="line">++size;</span><br><span class="line">book[a[r].id] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">num[a[r].id] ++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">ans = min(ans, a[r].val - a[l].val);</span><br><span class="line"><span class="keyword">if</span> (num[a[l].id] == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">num[a[l].id] = <span class="number">0</span>;</span><br><span class="line">book[a[l].id] = <span class="literal">false</span>;</span><br><span class="line">--size;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">--num[a[l].id];</span><br><span class="line">&#125;</span><br><span class="line">++l;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="I-The-Crime-solving-Plan-of-Groundhog"><a href="#I-The-Crime-solving-Plan-of-Groundhog" class="headerlink" title="I-The Crime-solving Plan of Groundhog"></a>I-<a href="https://ac.nowcoder.com/acm/contest/5674/I">The Crime-solving Plan of Groundhog</a></h1><p>题解证明:</p><blockquote><p>把当前的数字拆成4个数 𝑎,𝑏,𝑐,𝑑(𝑎 ≤ 𝑏 ≤ 𝑐 ≤ 𝑑) ,那么我们有两种决策：两位数×两位数，或者三位数×一 位数。</p><ul><li><p>10𝑎 + 𝑑 ⋅ 10𝑏 + 𝑐 = 100𝑎𝑏 + 10𝑎𝑐 + 10𝑏𝑑 + 𝑐𝑑</p></li><li><p>100𝑏 + 10𝑐 + 𝑑 ⋅ 𝑎 = 100𝑎𝑏 + 10𝑎𝑐 + 𝑎𝑑 &lt; 10𝑎 + 𝑑 ⋅ 10𝑏 + 𝑐 </p></li></ul><p>同理类推， 可以证明留一个最小的正整数作为第一个数，剩下的所有数字排成最小的数作为第二个数时，答案取到最 小值。<br>注意高精度细节和“正整数”、“整数”的区分，以及前导0的处理</p><p align="right">---来自官方的题解证明</p></blockquote><p>这题全靠xdl大胆猜想过的 :smile:</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">1000010</span>;</span><br><span class="line"><span class="keyword">int</span> a[maxn], b[maxn * <span class="number">3</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mulity</span><span class="params">(<span class="keyword">const</span> <span class="built_in">string</span>&amp; s, <span class="keyword">const</span> <span class="built_in">string</span>&amp; p)</span> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> ls = s.length();</span><br><span class="line"><span class="keyword">int</span> lp = p.length();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; ls; ++i) &#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; lp; ++j) &#123;</span><br><span class="line">b[i + j] += (s[i] - <span class="string">&#x27;0&#x27;</span>) * (p[j] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">b[i + j + <span class="number">1</span>] += b[i + j] / <span class="number">10</span>;</span><br><span class="line">b[i + j] %= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> len = ls + lp;</span><br><span class="line"><span class="keyword">while</span> (len &gt;= <span class="number">1</span> &amp;&amp; b[len - <span class="number">1</span>] == <span class="number">0</span>) --len;</span><br><span class="line">reverse(b, b + len);</span><br><span class="line"><span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::sync_with_stdio(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">cin</span>.tie(<span class="number">0</span>), <span class="built_in">cout</span>.tie(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; T;</span><br><span class="line"><span class="keyword">while</span> (T--) &#123;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="built_in">memset</span>(b, <span class="number">0</span>, <span class="keyword">sizeof</span>(b));</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">cin</span> &gt;&gt; a[i];</span><br><span class="line">sort(a + <span class="number">1</span>, a + n + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">string</span> s, p;</span><br><span class="line"><span class="keyword">int</span> l = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (l &lt;= n &amp;&amp; a[l] == <span class="number">0</span>) ++l;</span><br><span class="line">s += a[l] + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">p += a[l + <span class="number">1</span>] + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = l - <span class="number">1</span>; i &gt;= <span class="number">1</span>; --i) p += <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = l + <span class="number">2</span>; i &lt;= n; ++i) p += a[i] + <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">reverse(p.begin(), p.end());</span><br><span class="line"><span class="keyword">int</span> len = mulity(s, p);</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; ++i) <span class="built_in">cout</span> &lt;&lt; b[i];</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="K-The-Flee-Plan-of-Groundhog"><a href="#K-The-Flee-Plan-of-Groundhog" class="headerlink" title="K-The Flee Plan of Groundhog"></a>K-<a href="https://ac.nowcoder.com/acm/contest/5674/K">The Flee Plan of Groundhog</a></h1><p>有空再补 : )</p>]]></content>
      
      
      <categories>
          
          <category> 题解 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 题解 </tag>
            
            <tag> ACM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/08/06/hello-world/"/>
      <url>2020/08/06/hello-world/</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h1><h2 id="千万千万千万不要用MarkPad"><a href="#千万千万千万不要用MarkPad" class="headerlink" title="千万千万千万不要用MarkPad"></a><font color = red size = 5>千万千万千万不要用MarkPad</font></h2><font color = #66ccff size = 4>Typora大法天下第一</font><p>遇到front-matter无法识别的情况只需要在上下同时加一个回车就好了,即:</p><blockquote><p>-—</p><p>front-matter</p><p>-—</p></blockquote><p>  或者直接用<font color = #66ccfff>Typora</font></p><h2 id="添加emoji和task支持"><a href="#添加emoji和task支持" class="headerlink" title="添加emoji和task支持"></a>添加emoji和task支持</h2><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm un hexo<span class="literal">-renderer</span><span class="literal">-marked</span> <span class="literal">-S</span></span><br><span class="line">npm i hexo<span class="literal">-renderer</span><span class="literal">-markdown</span><span class="literal">-it</span> <span class="literal">-S</span></span><br><span class="line">npm i markdown<span class="literal">-it</span><span class="literal">-emoji</span> markdown<span class="literal">-it</span><span class="literal">-task</span><span class="literal">-lists</span> <span class="literal">-S</span></span><br></pre></td></tr></table></figure><p>在根目录的_config.yml中写入</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">markdown:</span></span><br><span class="line">  <span class="attr">render:</span></span><br><span class="line">    <span class="attr">html:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">xhtmlOut:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">breaks:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">linkify:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">typographer:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">plugins:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-footnote</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sup</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-sub</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-abbr</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">markdown-it-emoji</span></span><br><span class="line">  <span class="attr">anchors:</span></span><br><span class="line">    <span class="attr">level:</span> <span class="number">1</span></span><br><span class="line">    <span class="attr">collisionSuffix:</span> <span class="string">&#x27;v&#x27;</span></span><br><span class="line">    <span class="attr">permalink:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">permalinkClass:</span> <span class="string">header-anchor</span></span><br><span class="line">    <span class="attr">permalinkSymbol:</span> <span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p><a href="https://www.jianshu.com/p/f9e57ecca150">这篇文章中</a>关于markdown-it的用法介绍的非常清楚。</p><h1 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h1><ul><li><font color = #66eegg size = 5>Github+jsDelivr+PicGo</font></li></ul><font size = 4>既能白嫖又能加速国内访问岂不妙哉~</font>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
